// <auto-generated />
using System;
using DoAn_LTWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAn_LTWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250410065153_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAn_LTWeb.Models.ChiTietPhongTro", b =>
                {
                    b.Property<int>("MaChiTietPhongTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietPhongTro"));

                    b.Property<float>("GiaPhong")
                        .HasColumnType("real");

                    b.Property<int>("MaNoiThat")
                        .HasColumnType("int");

                    b.Property<int>("MaPhongTro")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietPhongTro");

                    b.HasIndex("MaNoiThat");

                    b.HasIndex("MaPhongTro");

                    b.ToTable("ChiTietPhongTro");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.ChiTietThuePhong", b =>
                {
                    b.Property<int>("MaChiTietThuePhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietThuePhong"));

                    b.Property<int>("MaHopDong")
                        .HasColumnType("int");

                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<int>("MaPhongTro")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietThuePhong");

                    b.HasIndex("MaHopDong")
                        .IsUnique();

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaPhongTro");

                    b.ToTable("ChiTietThuePhong");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.DieuKhoan", b =>
                {
                    b.Property<int>("MaDieuKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDieuKhoan"));

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDieuKhoan");

                    b.ToTable("DieuKhoan", (string)null);
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.HoaDon", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHoaDon"));

                    b.Property<int?>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<float>("SoDien")
                        .HasColumnType("real");

                    b.Property<float>("SoNuoc")
                        .HasColumnType("real");

                    b.Property<float>("TienPhong")
                        .HasColumnType("real");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.HopDong", b =>
                {
                    b.Property<int>("MaHopDong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHopDong"));

                    b.Property<string>("HinhThuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("MaHopDong");

                    b.ToTable("HopDong");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhachHang"));

                    b.Property<string>("CMND")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaKhachHang");

                    b.HasIndex("UserId");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.NhaTro", b =>
                {
                    b.Property<int>("MaNhaTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhaTro"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaTro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaNhaTro");

                    b.ToTable("NhaTro");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.NhaXe", b =>
                {
                    b.Property<int>("MaNhaXe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhaXe"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaNhaTro")
                        .HasColumnType("int");

                    b.Property<int>("SucChua")
                        .HasColumnType("int");

                    b.HasKey("MaNhaXe");

                    b.HasIndex("MaNhaTro");

                    b.ToTable("NhaXe");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.NhanVien", b =>
                {
                    b.Property<int>("MaNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhanVien"));

                    b.Property<string>("CMND")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaNhaTro")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayVaoLam")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaNhanVien");

                    b.HasIndex("MaNhaTro");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.NoiThat", b =>
                {
                    b.Property<int>("MaNoiThat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNoiThat"));

                    b.Property<float?>("Gia")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiNoiThat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayMua")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenNoiThat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNoiThat");

                    b.ToTable("NoiThat");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.PhongTro", b =>
                {
                    b.Property<int>("MaPhongTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhongTro"));

                    b.Property<int?>("DienTich")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaNhaTro")
                        .HasColumnType("int");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhongTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhongTro");

                    b.HasIndex("MaNhaTro");

                    b.ToTable("PhongTro");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.Xe", b =>
                {
                    b.Property<int>("MaXe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaXe"));

                    b.Property<string>("BienSoXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<int>("MaNhaXe")
                        .HasColumnType("int");

                    b.HasKey("MaXe");

                    b.HasIndex("MaKhachHang")
                        .IsUnique();

                    b.HasIndex("MaNhaXe");

                    b.ToTable("Xe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.ChiTietPhongTro", b =>
                {
                    b.HasOne("DoAn_LTWeb.Models.NoiThat", "NoiThat")
                        .WithMany("chiTietPhongTro")
                        .HasForeignKey("MaNoiThat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn_LTWeb.Models.PhongTro", "PhongTro")
                        .WithMany("chiTietPhongTro")
                        .HasForeignKey("MaPhongTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NoiThat");

                    b.Navigation("PhongTro");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.ChiTietThuePhong", b =>
                {
                    b.HasOne("DoAn_LTWeb.Models.HopDong", "HopDong")
                        .WithOne("ChiTietThuePhong")
                        .HasForeignKey("DoAn_LTWeb.Models.ChiTietThuePhong", "MaHopDong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn_LTWeb.Models.KhachHang", "KhachHang")
                        .WithMany("ChiTietThuePhong")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn_LTWeb.Models.PhongTro", "PhongTro")
                        .WithMany("chiTietThuePhong")
                        .HasForeignKey("MaPhongTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HopDong");

                    b.Navigation("KhachHang");

                    b.Navigation("PhongTro");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.HoaDon", b =>
                {
                    b.HasOne("DoAn_LTWeb.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDon")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DoAn_LTWeb.Models.NhanVien", "NhanVien")
                        .WithMany("HoaDon")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.KhachHang", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.NhaXe", b =>
                {
                    b.HasOne("DoAn_LTWeb.Models.NhaTro", "NhaTro")
                        .WithMany("NhaXe")
                        .HasForeignKey("MaNhaTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhaTro");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.NhanVien", b =>
                {
                    b.HasOne("DoAn_LTWeb.Models.NhaTro", "NhaTro")
                        .WithMany("NhanVien")
                        .HasForeignKey("MaNhaTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhaTro");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.PhongTro", b =>
                {
                    b.HasOne("DoAn_LTWeb.Models.NhaTro", "NhaTro")
                        .WithMany("PhongTro")
                        .HasForeignKey("MaNhaTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhaTro");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.Xe", b =>
                {
                    b.HasOne("DoAn_LTWeb.Models.KhachHang", "KhachHang")
                        .WithOne("Xe")
                        .HasForeignKey("DoAn_LTWeb.Models.Xe", "MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn_LTWeb.Models.NhaXe", "NhaXe")
                        .WithMany("Xe")
                        .HasForeignKey("MaNhaXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("NhaXe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.HopDong", b =>
                {
                    b.Navigation("ChiTietThuePhong");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.KhachHang", b =>
                {
                    b.Navigation("ChiTietThuePhong");

                    b.Navigation("HoaDon");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.NhaTro", b =>
                {
                    b.Navigation("NhaXe");

                    b.Navigation("NhanVien");

                    b.Navigation("PhongTro");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.NhaXe", b =>
                {
                    b.Navigation("Xe");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.NoiThat", b =>
                {
                    b.Navigation("chiTietPhongTro");
                });

            modelBuilder.Entity("DoAn_LTWeb.Models.PhongTro", b =>
                {
                    b.Navigation("chiTietPhongTro");

                    b.Navigation("chiTietThuePhong");
                });
#pragma warning restore 612, 618
        }
    }
}
