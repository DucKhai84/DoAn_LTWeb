@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" asp-append-version="true">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/main.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/style_Admin_2.css" asp-append-version="true">



<div class="container py-5">
    <h2 class="text-center mb-4">Danh sách yêu cầu thuê phòng</h2>
    <ul id="bookingRequests" class="list-unstyled"></ul>
</div>

<!-- Nhúng thư viện SignalR -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/bookingHub")
        .build();

    connection.start()
        .then(() => console.log("✅ Kết nối SignalR thành công!"))
        .catch(err => console.error("❌ Kết nối SignalR thất bại:", err.toString()));

    connection.on("ReceiveBookingRequest", function (roomId, userName) {
        console.log(`📩 Yêu cầu đặt phòng: Phòng ${roomId}, Người dùng ${userName}`);

        let bookingRequests = JSON.parse(localStorage.getItem('bookingRequests')) || [];
        // Kiểm tra xem yêu cầu đã tồn tại chưa
        const existingRequest = bookingRequests.find(req => req.roomId === roomId);
        if (!existingRequest) {
            bookingRequests.push({ roomId, userName });
            localStorage.setItem('bookingRequests', JSON.stringify(bookingRequests));

            var li = document.createElement("li");
            li.classList.add("booking-card");
            li.setAttribute('data-room-id', roomId); // Thêm data-room-id để nhận diện phòng

            li.innerHTML = `
                <div class="card shadow-sm mb-3">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="user-name">${userName}</h5>
                        <span class="badge badge-success">Phòng ${roomId}</span>
                    </div>
                    <div class="card-body">
                        <p><strong>${userName}</strong> yêu cầu thuê phòng <strong>${roomId}</strong></p>
                    </div>
                    <div class="card-footer text-right">
                        <button class="btn btn-success btn-sm" onclick="acceptBooking(${roomId})">Chấp nhận</button>
                        <button class="btn btn-danger btn-sm" onclick="rejectBooking(${roomId})">Từ chối</button>
                    </div>
                </div>
            `;

            document.getElementById("bookingRequests").appendChild(li);
        }
    });

    window.onload = function () {
        // Kiểm tra xem dữ liệu trong localStorage có hay không
        let bookingRequests = JSON.parse(localStorage.getItem('bookingRequests')) || [];

        console.log('Đang hiển thị yêu cầu từ localStorage:', bookingRequests);

        // Duyệt qua danh sách và hiển thị thông báo
        bookingRequests.forEach(request => {
            var li = document.createElement("li");
            li.classList.add("booking-card");
            li.setAttribute('data-room-id', request.roomId);

            li.innerHTML = `
                <div class="card shadow-sm mb-3">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="user-name">${request.userName}</h5>
                        <span class="badge badge-success">Phòng ${request.roomId}</span>
                    </div>
                    <div class="card-body">
                        <p><strong>${request.userName}</strong> yêu cầu thuê phòng <strong>${request.roomId}</strong></p>
                    </div>
                    <div class="card-footer text-right">
                        <button class="btn btn-success btn-sm" onclick="acceptBooking(${request.roomId})">Chấp nhận</button>
                        <button class="btn btn-danger btn-sm" onclick="rejectBooking(${request.roomId})">Từ chối</button>
                    </div>
                </div>
            `;
            document.getElementById("bookingRequests").appendChild(li);
        });
    };

    // Các hàm acceptBooking, rejectBooking vẫn giữ nguyên như bạn đã thực hiện.



// Gửi yêu cầu đặt phòng từ client
function sendBookingRequest(roomId, userName) {
    connection.invoke("RequestBooking", roomId, userName)
        .catch(err => console.error("❌ Lỗi gửi yêu cầu đặt phòng:", err.toString()));
}

// Chấp nhận yêu cầu đặt phòng
function acceptBooking(roomId) {
    connection.invoke("AcceptBooking", roomId)
        .catch(err => console.error("❌ Lỗi chấp nhận phòng:", err.toString()));

        let bookingRequests = JSON.parse(localStorage.getItem('bookingRequests')) || [];
        bookingRequests = bookingRequests.filter(request => request.roomId !== roomId);
        localStorage.setItem('bookingRequests', JSON.stringify(bookingRequests));

        // Tìm phần tử li chứa yêu cầu đặt phòng và xóa nó khỏi danh sách
        const li = document.querySelector(`#bookingRequests li[data-room-id='${roomId}']`);
        if (li) {
            li.remove(); // Xóa phần tử khỏi danh sách
        }
}

// Từ chối yêu cầu đặt phòng
    function rejectBooking(roomId) {
        // Gửi yêu cầu từ chối
        connection.invoke("RejectBooking", roomId)
            .catch(err => console.error("❌ Lỗi từ chối phòng:", err.toString()));

        let bookingRequests = JSON.parse(localStorage.getItem('bookingRequests')) || [];
        bookingRequests = bookingRequests.filter(request => request.roomId !== roomId);
        localStorage.setItem('bookingRequests', JSON.stringify(bookingRequests));

        // Tìm phần tử li chứa yêu cầu đặt phòng và xóa nó khỏi danh sách
        const li = document.querySelector(`#bookingRequests li[data-room-id='${roomId}']`);
        if (li) {
            li.remove(); // Xóa phần tử khỏi danh sách
        }
    }


// Lắng nghe thay đổi trạng thái phòng
    connection.on("BookingStatusChanged", (roomId, status) => {
        console.log(`📩 Phòng ${roomId} có trạng thái mới: ${status}`);

        Swal.fire({
            title: 'Status Changed',
            text: `Phòng ${roomId} có trạng thái mới: ${status}`,
            icon: status === "Thành công" ? 'success' : 'info',
            confirmButtonText: 'OK'
        });

        if (status === "Thành công") {
            document.getElementById("bookingForm").submit(); // Tự động submit form
        }
    });

</script>

<style>
    /* Card Style */
    .booking-card {
        border-radius: 15px;
        margin-bottom: 20px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .booking-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

    .card-header {
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border-bottom: 2px solid #0056b3;
    }

    .user-name {
        font-size: 18px;
        font-weight: bold;
    }

    .badge-success {
        background-color: #28a745;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 14px;
    }

    .card-body {
        padding: 20px;
        font-size: 16px;
        color: #333;
    }

    .card-footer {
        background-color: #f8f9fa;
        text-align: right;
        padding: 10px 20px;
    }

    button {
        padding: 8px 15px;
        font-size: 14px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

    .btn-sm {
        font-size: 12px;
    }

    .btn-success {
        background-color: #28a745;
        color: white;
    }

        .btn-success:hover {
            background-color: #218838;
        }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    /* Container and Heading Styles */
    .container {
        max-width: 900px;
        margin: 0 auto;
    }

    h2 {
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 20px;
        text-align: center;
    }
</style>